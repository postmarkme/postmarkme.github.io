<?xml version="1.0" encoding="ISO-8859-1"?>
<opml version="2.0">
	<head>
		<title>readme.md</title>
		<dateModified>&lt;%dateModified%></dateModified>
		<expansionState></expansionState>
		<vertScrollState>1</vertScrollState>
		<windowTop>300</windowTop>
		<windowLeft>700</windowLeft>
		<windowBottom>900</windowBottom>
		<windowRight>1500</windowRight>
		</head>
	<body text="readme.md">
		<outline text="## opmlToJs package"></outline>
		<outline text="### How to install"></outline>
		<outline text="`npm install opmltojs`"></outline>
		<outline text="### The story">
			<outline text="opmlToJs makes it easy to read and write OPML files in Node apps. "></outline>
			<outline text="The basic idea: Pass in some OPML text, get back a JavaScript object. And the other way works too. "></outline>
			<outline text="It builds on &lt;a href=&quot;https://github.com/Leonidas-from-XIV/node-xml2js&quot;&gt;xml2Js&lt;/a&gt;."></outline>
			<outline text="Note this package does not expand OPML includes. "></outline>
			<outline text="See the &lt;a href=&quot;https://github.com/scripting/opmlToJs/tree/master/examples/readstates&quot;&gt;readstates&lt;/a&gt; app for an example of how to call it. "></outline>
			<outline text="A blog post &lt;a href=&quot;http://scripting.com/2017/08/07.html#a093801&quot;&gt;announcing&lt;/a&gt; opmlToJs."></outline>
			</outline>
		<outline text="### Updates">
			<outline text="##### v0.4.8 -- 8/12/6 by DW">
				<outline text="Added new exported function &lt;i&gt;visitSubs.&lt;/i&gt; I had to write this for an app I'm working on, but it seemed it should be part of this package. "></outline>
				</outline>
			<outline text="##### v0.4.5 -- 8/4/6 by DW">
				<outline text="Added new exported function opmlify. It turns an outline structure returned by opmltojs.parse into the equivalent OPML text. It's the other side of parsing, serializing. "></outline>
				<outline text="Improved the example program, used the canonical example OPML file to test with. It is in its own folder with its own package.json file, so it's a better model of how an app might use the package. "></outline>
				<outline text="Add a &lt;i&gt;generator&lt;/i&gt; element to the head section after we parse the OPML text, following the &lt;a href=&quot;http://cyber.harvard.edu/rss/rss.html#optionalChannelElements&quot;&gt;example&lt;/a&gt; of RSS 2.0. "></outline>
				<outline text="Commented some debugging code. "></outline>
				</outline>
			</outline>
		</body>
	</opml>
